//
// Created by Admin on 11/29/2021.
//
#include <iostream>
#include <iomanip>
/*
 1.	Разработать программу в соответствии с номером варианта.
	запрашивает у пользователя размер двумерного массива;
	формирует массив случайных чисел заданного размера;
	запрашивает у пользователя ключ для поиска;
	запрашивает у пользователя число m;
	осуществляет последовательный поиск ключа в массиве;
	осуществляет бинарный поиск в отсортированном массиве;
	возвращает количество найденных в массиве совпадений с ключом и их порядковые номера;
	возвращает последнее совпадение с ключом в массиве и его порядковый номер;
	возвращает количество коллизий, возникших в результате хеширования методом деления.

 2.Реализовать программу таким образом, чтобы механизмы поиска были реализованы отдельными функциями.
 3.	Дополнить программу таким образом, чтобы в ней подсчитывалось время выполнения поиска.
 4.	Сделать выводы.

Произвести поиск элемента (последовательности элементов) по четным строкам матрицы. Упорядочить каждую строку массива по убыванию отрицательных величин.
*/
using namespace std;

int main() {
    int n = 0, m = 0;
    cout << "Enter M number:";
    cin >> m;
    cout << "Enter N number:";
    cin >> n;


    int **mainArray = new int *[n];
    int totalIterations = 0;
    cout << "Original array:" << endl;
    for (int i = 0; i < n; i++) {
        mainArray[i] = new int[m];
        for (int j = 0; j < m; j++) {
            mainArray[i][j] = rand() % 100 - 30;
            cout << setw(5) << mainArray[i][j] << " ";
        }
        cout << endl;
    }
    cout << "-------------------------\n" << endl;
}